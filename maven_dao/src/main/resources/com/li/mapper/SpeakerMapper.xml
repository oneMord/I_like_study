<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.li.mapper.SpeakerMapper" >
  <resultMap id="BaseResultMap" type="com.li.pojo.Speaker" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="speaker_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="speaker_job" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="head_img_url" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.li.pojo.Speaker" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="speaker_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="speaker_job" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="head_img_url" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="speaker_desc" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, speaker_name, speaker_job, head_img_url
  </sql>
  <sql id="Blob_Column_List" >
    speaker_desc
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from speaker
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from speaker
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.li.pojo.Speaker" >
    insert into speaker (id, speaker_name, speaker_job, 
      head_img_url, speaker_desc)
    values (#{id,jdbcType=INTEGER}, #{speakerName,jdbcType=VARCHAR}, #{speakerJob,jdbcType=VARCHAR}, 
      #{headImgUrl,jdbcType=VARCHAR}, #{speakerDesc,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.li.pojo.Speaker" >
    insert into speaker
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="speakerName != null" >
        speaker_name,
      </if>
      <if test="speakerJob != null" >
        speaker_job,
      </if>
      <if test="headImgUrl != null" >
        head_img_url,
      </if>
      <if test="speakerDesc != null" >
        speaker_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="speakerName != null" >
        #{speakerName,jdbcType=VARCHAR},
      </if>
      <if test="speakerJob != null" >
        #{speakerJob,jdbcType=VARCHAR},
      </if>
      <if test="headImgUrl != null" >
        #{headImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="speakerDesc != null" >
        #{speakerDesc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.li.pojo.Speaker" >
    update speaker
    <set >
      <if test="speakerName != null" >
        speaker_name = #{speakerName,jdbcType=VARCHAR},
      </if>
      <if test="speakerJob != null" >
        speaker_job = #{speakerJob,jdbcType=VARCHAR},
      </if>
      <if test="headImgUrl != null" >
        head_img_url = #{headImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="speakerDesc != null" >
        speaker_desc = #{speakerDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.li.pojo.Speaker" >
    update speaker
    set speaker_name = #{speakerName,jdbcType=VARCHAR},
      speaker_job = #{speakerJob,jdbcType=VARCHAR},
      head_img_url = #{headImgUrl,jdbcType=VARCHAR},
      speaker_desc = #{speakerDesc,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.li.pojo.Speaker" >
    update speaker
    set speaker_name = #{speakerName,jdbcType=VARCHAR},
      speaker_job = #{speakerJob,jdbcType=VARCHAR},
      head_img_url = #{headImgUrl,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>