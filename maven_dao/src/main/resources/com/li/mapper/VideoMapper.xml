<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.li.mapper.VideoMapper" >
  <resultMap id="BaseResultMap" type="com.li.pojo.Video" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="title" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="time" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="speaker_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="course_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="video_url" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="image_url" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="play_num" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.li.pojo.Video" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="title" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="time" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="speaker_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="course_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="video_url" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="image_url" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="play_num" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="detail" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, title, time, speaker_id, course_id, video_url, image_url, play_num
  </sql>
  <sql id="Blob_Column_List" >
    detail
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from video
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from video
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.li.pojo.Video" >
    insert into video (id, title, time, 
      speaker_id, course_id, video_url, 
      image_url, play_num, detail
      )
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{time,jdbcType=INTEGER}, 
      #{speakerId,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER}, #{videoUrl,jdbcType=VARCHAR}, 
      #{imageUrl,jdbcType=VARCHAR}, #{playNum,jdbcType=INTEGER}, #{detail,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.li.pojo.Video" >
    insert into video
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="speakerId != null" >
        speaker_id,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="videoUrl != null" >
        video_url,
      </if>
      <if test="imageUrl != null" >
        image_url,
      </if>
      <if test="playNum != null" >
        play_num,
      </if>
      <if test="detail != null" >
        detail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=INTEGER},
      </if>
      <if test="speakerId != null" >
        #{speakerId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="videoUrl != null" >
        #{videoUrl,jdbcType=VARCHAR},
      </if>
      <if test="imageUrl != null" >
        #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="playNum != null" >
        #{playNum,jdbcType=INTEGER},
      </if>
      <if test="detail != null" >
        #{detail,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.li.pojo.Video" >
    update video
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=INTEGER},
      </if>
      <if test="speakerId != null" >
        speaker_id = #{speakerId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="videoUrl != null" >
        video_url = #{videoUrl,jdbcType=VARCHAR},
      </if>
      <if test="imageUrl != null" >
        image_url = #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="playNum != null" >
        play_num = #{playNum,jdbcType=INTEGER},
      </if>
      <if test="detail != null" >
        detail = #{detail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.li.pojo.Video" >
    update video
    set title = #{title,jdbcType=VARCHAR},
      time = #{time,jdbcType=INTEGER},
      speaker_id = #{speakerId,jdbcType=INTEGER},
      course_id = #{courseId,jdbcType=INTEGER},
      video_url = #{videoUrl,jdbcType=VARCHAR},
      image_url = #{imageUrl,jdbcType=VARCHAR},
      play_num = #{playNum,jdbcType=INTEGER},
      detail = #{detail,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.li.pojo.Video" >
    update video
    set title = #{title,jdbcType=VARCHAR},
      time = #{time,jdbcType=INTEGER},
      speaker_id = #{speakerId,jdbcType=INTEGER},
      course_id = #{courseId,jdbcType=INTEGER},
      video_url = #{videoUrl,jdbcType=VARCHAR},
      image_url = #{imageUrl,jdbcType=VARCHAR},
      play_num = #{playNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>